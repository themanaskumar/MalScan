from rest_framework.decorators import api_view
from rest_framework.response import Response
from rest_framework import status
from django.contrib.auth.hashers import check_password
from rest_framework_simplejwt.tokens import RefreshToken
from .models import User
from .serializers import SignupSerializer, SigninSerializer

def get_tokens_for_user(user):
    refresh = RefreshToken.for_user(user)
    return {
        "refresh": str(refresh),
        "access": str(refresh.access_token),
    }

@api_view(["POST"])
def signup(request):
    serializer = SignupSerializer(data=request.data)

    if serializer.is_valid():
        user = serializer.save()
        tokens = get_tokens_for_user(user)
        return Response(
            {"message": "User registered successfully!", "email":user.email, "name":user.name, "tokens": tokens},
            status=status.HTTP_201_CREATED
        )

    return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

@api_view(["POST"])
def signin(request):
    serializer = SigninSerializer(data=request.data)

    if serializer.is_valid():
        email = serializer.validated_data["email"]
        user = User.objects.get(email=email)
        tokens = get_tokens_for_user(user)

        return Response(
            {"message": "Signin successful", "email":user.email, "name":user.name, "tokens": tokens},
            status=status.HTTP_200_OK
        )

    return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
