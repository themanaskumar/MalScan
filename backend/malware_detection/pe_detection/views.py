import os
import numpy as np
import lightgbm as lgb
from django.http import JsonResponse
from django.views.decorators.csrf import csrf_exempt
from django.views.decorators.http import require_POST
from django.conf import settings
from ember.features import PEFeatureExtractor

@csrf_exempt
@require_POST
def detect_pe_file(request):
    if 'file' not in request.FILES:
        return JsonResponse({'error': 'No file provided'}, status=400)

    uploaded_file = request.FILES['file']
    byte_data = uploaded_file.read()

    extractor = PEFeatureExtractor()

    try:
        features = np.array(extractor.feature_vector(byte_data), dtype=np.float32)

        model_path = os.path.join(settings.BASE_DIR, 'pe_detection', 'pe_detection_model.txt')
        model = lgb.Booster(model_file=model_path)

        prediction = model.predict([features])[0]
        result = 'malicious' if prediction > 0.5 else 'benign'

        return JsonResponse({
            'prediction': result,
            'score': float(prediction)
        })

    except Exception as e:
        return JsonResponse({'error': str(e)}, status=500)
